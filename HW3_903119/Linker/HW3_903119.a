;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.3 Standard
;Automatic Program Generator
;© Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : HW3_903119
;Version :
;Date    : 3/29/2015
;Author  : ROOT
;Company : eng
;Comments:
;
;
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 4.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*****************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <math.h>
;flash char digit[10]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};
;void sevenSegment(int input)
; 0000 001D {int decimal,unit;

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 001E decimal=floor(input/10);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	input -> Y+4
;	decimal -> R16,R17
;	unit -> R18,R19
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 001F unit=(input%10);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0020  PORTA=digit[unit];
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0021     PORTB.1=0;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0022     PORTB.0=1;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0023    delay_ms(150);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0024     PORTB.0=0;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0025    PORTB.1=1;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0026  PORTA=digit[decimal];
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0027 
; 0000 0028      delay_ms(150);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0029 }
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;
;void sevenSegment2(int input)
; 0000 002C {int decimal,unit;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 002D decimal=floor(input/10);
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;	input -> Y+4
;	decimal -> R16,R17
;	unit -> R18,R19
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 002E unit=(input%10);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 002F  PORTD=digit[unit];
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0030     PORTB.2=1;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0031     PORTB.3=0;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0032    delay_ms(150);
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0033     PORTB.2=0;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0034    PORTB.3=1;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0035  PORTD=digit[decimal];
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0036 
; 0000 0037      delay_ms(150);
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0038 }
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;int counterLightVertical,counterLightHorizontal;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 003C { counterLightVertical+=1;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 003D    counterLightHorizontal+=1;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 003E // Place your code here
; 0000 003F  if(counterLightVertical>12501)
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0040  counterLightVertical=0;
;PCODE: $0000006C VOL: 0
; 0000 0041  if(counterLightHorizontal>12500)
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0042   counterLightHorizontal=0;
;PCODE: $00000071 VOL: 0
; 0000 0043 
; 0000 0044 }
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;
;
;// Declare your global variables here
;
;void main(void)
; 0000 004A {
;PCODE: $00000076 VOL: 0
; 0000 004B // Declare your local variables here
; 0000 004C 
; 0000 004D // Input/Output Ports initialization
; 0000 004E // Port A initialization
; 0000 004F // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0050 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0051 PORTA=0x00;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0052 DDRA=0xFF;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0053 
; 0000 0054 // Port B initialization
; 0000 0055 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0056 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0057 PORTB=0x00;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 0058 DDRB=0xFF;
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0059 
; 0000 005A // Port C initialization
; 0000 005B // Func7=In Func6=In Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 005C // State7=T State6=T State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 005D PORTC=0x00;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 005E DDRC=0x3F;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 005F 
; 0000 0060 // Port D initialization
; 0000 0061 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0062 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0063 PORTD=0x00;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0064 DDRD=0xFF;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0065 
; 0000 0066 // Timer/Counter 0 initialization
; 0000 0067 // Clock source: System Clock
; 0000 0068 // Clock value: 62.500 kHz
; 0000 0069 // Mode: Normal top=0xFF
; 0000 006A // OC0 output: Disconnected
; 0000 006B TCCR0=0x03;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 006C TCNT0=0x00;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 006D OCR0=0x00;
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 006E 
; 0000 006F // Timer/Counter 1 initialization
; 0000 0070 // Clock source: System Clock
; 0000 0071 // Clock value: Timer1 Stopped
; 0000 0072 // Mode: Normal top=0xFFFF
; 0000 0073 // OC1A output: Discon.
; 0000 0074 // OC1B output: Discon.
; 0000 0075 // Noise Canceler: Off
; 0000 0076 // Input Capture on Falling Edge
; 0000 0077 // Timer1 Overflow Interrupt: Off
; 0000 0078 // Input Capture Interrupt: Off
; 0000 0079 // Compare A Match Interrupt: Off
; 0000 007A // Compare B Match Interrupt: Off
; 0000 007B TCCR1A=0x00;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 007C TCCR1B=0x00;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 007D TCNT1H=0x00;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 007E TCNT1L=0x00;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 007F ICR1H=0x00;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0080 ICR1L=0x00;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0081 OCR1AH=0x00;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0082 OCR1AL=0x00;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0083 OCR1BH=0x00;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0084 OCR1BL=0x00;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0085 
; 0000 0086 // Timer/Counter 2 initialization
; 0000 0087 // Clock source: System Clock
; 0000 0088 // Clock value: Timer2 Stopped
; 0000 0089 // Mode: Normal top=0xFF
; 0000 008A // OC2 output: Disconnected
; 0000 008B ASSR=0x00;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 008C TCCR2=0x00;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 008D TCNT2=0x00;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 008E OCR2=0x00;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 008F 
; 0000 0090 // External Interrupt(s) initialization
; 0000 0091 // INT0: Off
; 0000 0092 // INT1: Off
; 0000 0093 // INT2: Off
; 0000 0094 MCUCR=0x00;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0095 MCUCSR=0x00;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0096 
; 0000 0097 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0098 TIMSK=0x01;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 0099 
; 0000 009A // USART initialization
; 0000 009B // USART disabled
; 0000 009C UCSRB=0x00;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 009D 
; 0000 009E // Analog Comparator initialization
; 0000 009F // Analog Comparator: Off
; 0000 00A0 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 00A1 ACSR=0x80;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 00A2 SFIOR=0x00;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 00A3 
; 0000 00A4 // ADC initialization
; 0000 00A5 // ADC disabled
; 0000 00A6 ADCSRA=0x00;
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 00A7 
; 0000 00A8 // SPI initialization
; 0000 00A9 // SPI disabled
; 0000 00AA SPCR=0x00;
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 00AB 
; 0000 00AC // TWI initialization
; 0000 00AD // TWI disabled
; 0000 00AE TWCR=0x00;
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 00AF 
; 0000 00B0 // Global enable interrupts
; 0000 00B1 #asm("sei")
;PCODE: $000000BB VOL: 0
	sei
;PCODE: $000000BC VOL: 0
; 0000 00B2 
; 0000 00B3 while (1)
;PCODE: $000000BD VOL: 0
; 0000 00B4       {
; 0000 00B5      //this area control vertical traphic light
; 0000 00B6          if(counterLightVertical<=4500)
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 00B7           {PORTC.0=0;
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 00B8           PORTC.1=0;
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 00B9           PORTC.2=1;
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 00BA           sevenSegment(18-(counterLightVertical/250));
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 00BB 
; 0000 00BC            }
; 0000 00BD           if(4500<counterLightVertical&& counterLightVertical<=5000)
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 00BE           {PORTC.0=0;
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 00BF           PORTC.1=1;
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 00C0           PORTC.2=0;
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 00C1           sevenSegment(20-(counterLightVertical/250));
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 00C2           }
; 0000 00C3           if(5000<counterLightVertical && counterLightVertical<=12500)
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 00C4           {PORTC.0=1;
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 00C5           PORTC.1=0;
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 00C6           PORTC.2=0;
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 00C7           sevenSegment(50-(counterLightVertical/250));
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 00C8           }
; 0000 00C9           if(counterLightVertical>12500)
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 00CA           {PORTC.2=0;
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 00CB            PORTC.0=0;
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 00CC            PORTC.1=0;
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 00CD 
; 0000 00CE                 }
; 0000 00CF 
; 0000 00D0            //this area control Horizontal traphic light
; 0000 00D1            if(counterLightHorizontal<=7000)
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 00D2            {PORTC.3=0;
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 00D3            PORTC.4=0;
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 00D4            PORTC.5=1;
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 00D5            sevenSegment2(28-(counterLightHorizontal/250));
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 00D6            }
; 0000 00D7            if(counterLightHorizontal> 7000&&counterLightHorizontal<=7500)
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 00D8            {PORTC.3=0;
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 00D9            PORTC.4=1;
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 00DA            PORTC.5=0;
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 00DB            sevenSegment2(30-(counterLightHorizontal/250));
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 00DC            }
; 0000 00DD 
; 0000 00DE            if(counterLightHorizontal> 7500&&counterLightHorizontal<=12500)
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 00DF            {PORTC.3=1;
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 00E0            PORTC.4=0;
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 00E1            PORTC.5=0;
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 00E2            sevenSegment2(50-(counterLightHorizontal/250));
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0000 00E3            }
; 0000 00E4              if(counterLightHorizontal>12500)
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 00E5            {PORTC.3=0;
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 00E6            PORTC.4=0;
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 00E7            PORTC.5=0;
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0000 00E8            }
; 0000 00E9 
; 0000 00EA 
; 0000 00EB       }
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 00EC }
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
